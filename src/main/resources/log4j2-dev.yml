# 共有8个级别，按照从低到高为：ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF。
#日志支持的颜色  blue cyan  faint green magenta red yellow

Configuration:
  status: warn # log4j2框架本身的日志级别
  monitorInterval: 30 # log4j2重新扫描加载配置文件的周期单位秒，这里表示间隔30s重新加载配置文件

  Properties: # 定义全局变量
    Property: # 缺省配置（用于开发环境）。其他环境需要在VM参数中指定，如下：
      - name: log.level.console
        value: info
      - name: log.path
        value: ../log
      - name: app.name
        value: knowledge-api
      - name: log.pattern
        value: "%-d{yyyy-MM-dd HH:mm:ss.SSS} [%p] [%t] [%X{sid}] : %m @%F:%L%n"
      - name: console.log.pattern
        value: "%clr{%-d{yyyy-MM-dd HH:mm:ss.SSS}}{faint} [%clr{%p}] [%clr{%t}{cyan}] [%clr{%X{sid}}{magenta}] %clr{:}{faint} %clr{%m}{faint} %clr{@%F}{cyan}:%clr{%L}{blue}%n"
#        value: "%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %class{36} [%t] [%X{sid}][followNo:%X{followNo}] %L %M -%msg%xEx%n"
#        value: "%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %class{36} [%t] [%X{sn}] [%X{sid}] %L %M -%msg%xEx%n"



  Appenders:
    Console:  #输出到控制台
      name: CONSOLE
      target: SYSTEM_OUT
      PatternLayout:
        pattern: ${console.log.pattern}
    #  启动日志

    RollingFile:
      - name: ROLLING_FILE
        fileName: ${log.path}/${app.name}.log
#        filePattern: "${log.path}/archive/${app.name}.%d{yyyy-MM-dd}.log.gz"
#        filePattern: "${log.path}/archive/$${date:yyyy-MM}/$${date:dd}/${app.name}.%d{yyyy-MM-dd}-%i.log.zip"
        filePattern: "${log.path}/archive/${app.name}.%d{yyyy-MM-dd}-%i.log.zip"
        PatternLayout:
          pattern: ${log.pattern}
        Filters:
          # 一定要先去除不接受的日志级别，然后获取需要接受的日志级别
          ThresholdFilter:
            - level: debug
              onMatch: ACCEPT
              onMismatch: DENY
        Policies:
          SizeBasedTriggeringPolicy: #按大小拆分
            size: "10MB"
          TimeBasedTriggeringPolicy:  # 按天分类
            modulate: true
            interval: 1
        DefaultRolloverStrategy: #最大文件个数，并保留7天
          max: 1000
          Delete:
            basePath: "${log.path}/archive/"
            maxDepth: 3
            IfFileName:
              glob: "*.log.zip"
            IfLastModified:
              age: 7D

      #   错误日志
      - name: EXCEPTION_ROLLING_FILE
        ignoreExceptions: false
        fileName: ${log.path}/${app.name}-error.log
#        filePattern: "${log.path}/archive/${app.name}-error.%d{yyyy-MM-dd}.log.gz"
        filePattern: "${log.path}/archive/${app.name}-error.%d{yyyy-MM-dd}-%i.log.zip"
        ThresholdFilter:
          level: error
          onMatch: ACCEPT
          onMismatch: DENY
        PatternLayout:
          pattern: ${log.pattern}
        Policies:
          SizeBasedTriggeringPolicy: #按大小拆分
            size: "100 MB"
          TimeBasedTriggeringPolicy:  # 按天分类
            modulate: true
            interval: 1
        DefaultRolloverStrategy:     # 文件最多100个
          max: 100


  Loggers:
    AsyncRoot:
      additivity: true
      level: info
      includeLocation: true
      AppenderRef:
        - ref: CONSOLE
        - ref: ROLLING_FILE
        - ref: EXCEPTION_ROLLING_FILE

#    监听具体包下面的日志
    Logger: # 为com.xjj包配置特殊的Log级别，方便调试
      - name: org.springframework.data.mongodb.core
        additivity: false
        level: debug
        AppenderRef:
          - ref: CONSOLE
          - ref: ROLLING_FILE
      - name: com.streamax.base.dao
        additivity: false
        level: debug #输出日志到文件则需要屏蔽mybatis-plus.configuration.log-impl 并且为debug级别
        AppenderRef:
          - ref: CONSOLE
          - ref: ROLLING_FILE
      - name: com.streamax.base.component.sqlite
        additivity: false
        level: debug #输出sqlite的sql语句 debug级别
        AppenderRef:
          - ref: CONSOLE
          - ref: ROLLING_FILE