#应用端口值
server.port=8080
spring.profiles.active=dev

mybatis_plus.typeAliasesPackage=com.zr.test.demo.model.entity
mybatis_plus.mapper-locations=classpath:/mapper/*/*.xml

#数据库配置值
datasource.url.ip=127.0.0.1
datasource.url.port=3306
datasource.database=zr
datasource.username=root
datasource.password=123456
datasource.timezone=GMT

#redis配置
spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=123456
spring.redis.jedis.pool.max-idle=200
spring.redis.jedis.pool.max-wait=-1
spring.redis.jedis.pool.min-idle=0
spring.redis.jedis.pool.max-active=-1

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.name=ds_mysql
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://${datasource.url.ip}:${datasource.url.port}/${datasource.database}?serverTimezone=${datasource.timezone}&characterEncoding=utf8
spring.datasource.druid.username=${datasource.username}
spring.datasource.druid.password=${datasource.password}
spring.datasource.druid.initial-size=5
#连接池中最大的活跃连接数
spring.datasource.druid.max-active=20
#连接池中最小的活跃连接数
spring.datasource.druid.min-idle=5
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
## 打开PSCache，并且指定每个连接上PSCache的大小
#spring.datasource.druid.one.pool-prepared-statements=true
#spring.datasource.druid.one.max-pool-prepared-statement-per-connection-size=20
##既作为检测的间隔时间又作为testWhileIdel执行的依据
#spring.datasource.druid.one.time-between-eviction-runs-millis=60000
##销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
#spring.datasource.druid.one.min-evictable-idle-time-millis=30000
##spring.datasource.druid.max-open-prepared-statements= #和上面的等价
#spring.datasource.druid.one.validation-query=SELECT 'x'
#spring.datasource.druid.one.validation-query-timeout=30000
##申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
#spring.datasource.druid.one.test-on-borrow=false
##归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
#spring.datasource.druid.one.test-on-return=false
##申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
#spring.datasource.druid.one.test-while-idle=true
## 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，log4j2为你自己使用的日志，如果是log4j就写log4j,我这里用的log4j2
#spring.datasource.druid.one.filters=stat,wall
## 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.druid.one.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
## 定时输出统计信息到日志中，并每次输出日志会导致清零（reset）连接池相关的计数器。单位毫秒
#spring.datasource.druid.one.time-between-log-stats-millis=300000

file.save.path=E:/file/